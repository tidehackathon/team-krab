version: '3'

networks: 
    laravel:
        driver: bridge

services: 
    nginx:
        image: nginx:alpine
        container_name: "${CONTAINER_PREFIX}_nginx"
        restart: unless-stopped
        tty: true
        ports:
            - "${NGINX_PORT}:8000"
        volumes: 
            - ./src:/var/www/app
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on: 
            - php
            - postgres
        networks: 
            - laravel

    postgres:
        image: postgres:14.4-alpine
        container_name: "${CONTAINER_PREFIX}_postgres"
        restart: unless-stopped
        tty: true
        ports:
            - "${DB_PORT}:5432"
        volumes:
            - ./postgresql:/var/lib/postgresql/data
            - ./db_backup_files:/tmp/db_backup_files
        environment:
            - POSTGRES_DB=${DB_DATABASE}
            - POSTGRES_USER=${DB_USERNAME}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
        networks:
            - laravel


    phppgadmin:
        restart: always
        image: dockage/phppgadmin:latest
        ports:
            - "81:80"
            - "4443:443"
        environment:
#            - PHP_PG_ADMIN_SERVER_DESC=PostgreSQL
            - PHP_PG_ADMIN_SERVER_HOST=postgres
            - PHP_PG_ADMIN_SERVER_PORT=5432
        networks:
            - laravel

    php:
        build:
            context: .
            dockerfile: Dockerfile
        image: laravel_docker:latest
        container_name: "${CONTAINER_PREFIX}_php"
        restart: unless-stopped
        tty: true
        working_dir: /var/www/app
        volumes: 
            - ./src:/var/www/app
        ports: 
            - "${PHP_PORT}:9000"
        networks: 
            - laravel

    redis:
        image: redis:alpine
        container_name: "${CONTAINER_PREFIX}_redis"
        ports:
            - "${REDIS_PORT}:6379"
        networks:
            - laravel